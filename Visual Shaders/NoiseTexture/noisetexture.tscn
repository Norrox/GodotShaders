[gd_scene load_steps=55 format=2]

[ext_resource path="res://Visual Shaders/NoiseTexture/noisetexture.tres" type="Texture" id=1]
[ext_resource path="res://icon.png" type="Texture" id=2]
[ext_resource path="res://addons/shaderV/rgba/gradientMapping.gd" type="Script" id=3]

[sub_resource type="VisualShaderNodeScalarConstant" id=1]
constant = 50.0

[sub_resource type="VisualShaderNodeInput" id=2]
input_name = "uv"

[sub_resource type="VisualShaderNodeInput" id=3]
input_name = "time"

[sub_resource type="VisualShaderNodeVectorOp" id=4]
operator = 3

[sub_resource type="VisualShaderNodeVectorOp" id=5]

[sub_resource type="VisualShaderNodeScalarConstant" id=6]
constant = -50.0

[sub_resource type="VisualShaderNodeVectorOp" id=7]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeVectorOp" id=8]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.3, 0.3, 0.3 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=9]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.3, 0.3, 0.3 ) ]
operator = 2

[sub_resource type="VisualShaderNodeTexture" id=10]
output_port_for_preview = 0
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeVectorOp" id=11]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeVectorOp" id=12]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=13]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeScalarConstant" id=14]
constant = 1.0

[sub_resource type="VisualShaderNodeColorConstant" id=15]
output_port_for_preview = 0
constant = Color( 1, 0, 0, 1 )

[sub_resource type="VisualShaderNodeVectorOp" id=16]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeScalarConstant" id=17]
constant = 0.7

[sub_resource type="VisualShaderNodeCompare" id=26]
default_input_values = [ 0, 0.0, 1, 1.8, 2, 1e-05 ]
function = 4

[sub_resource type="VisualShaderNodeVectorOp" id=27]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTexture" id=18]
output_port_for_preview = 0
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeScalarConstant" id=28]
constant = 0.4

[sub_resource type="VisualShaderNodeVectorOp" id=29]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeScalarConstant" id=30]
constant = 0.385

[sub_resource type="VisualShaderNodeCompare" id=31]
output_port_for_preview = 0
function = 4

[sub_resource type="VisualShaderNodeScalarConstant" id=32]
constant = 1.0

[sub_resource type="VisualShaderNodeVectorDecompose" id=33]
output_port_for_preview = 2

[sub_resource type="VisualShaderNodeVectorOp" id=34]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeColorConstant" id=35]
output_port_for_preview = 0
constant = Color( 1, 0.43725, 0, 1 )

[sub_resource type="VisualShaderNodeCompare" id=36]
output_port_for_preview = 0
function = 4

[sub_resource type="VisualShaderNodeTexture" id=19]
output_port_for_preview = 0
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeScalarConstant" id=37]
constant = 0.6

[sub_resource type="VisualShaderNodeVectorOp" id=38]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeCompare" id=39]
output_port_for_preview = 0
function = 4

[sub_resource type="VisualShaderNodeScalarConstant" id=40]
constant = 0.4

[sub_resource type="VisualShaderNodeColorConstant" id=41]
output_port_for_preview = 0
constant = Color( 1, 0.859125, 0, 1 )

[sub_resource type="VisualShaderNodeVectorOp" id=42]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=43]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeCompare" id=44]
output_port_for_preview = 0
function = 2

[sub_resource type="VisualShaderNodeScalarConstant" id=45]
constant = 1.0

[sub_resource type="VisualShaderNodeColorConstant" id=46]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeInput" id=20]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id=47]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=48]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeTextureUniform" id=49]
uniform_name = "TextureUniform"

[sub_resource type="VisualShaderNodeCustom" id=50]
output_port_for_preview = 0
script = ExtResource( 3 )

[sub_resource type="VisualShaderNodeVectorOp" id=51]

[sub_resource type="VisualShaderNodeInput" id=21]
input_name = "time"

[sub_resource type="VisualShaderNodeVectorOp" id=22]
operator = 3

[sub_resource type="VisualShaderNodeVectorOp" id=23]

[sub_resource type="VisualShader" id=24]
code = "shader_type canvas_item;
uniform sampler2D tex_frg_3;
uniform sampler2D tex_frg_4;
uniform sampler2D tex_frg_20;



void vertex() {
// Output:0

}

void fragment() {
// Input:5
	vec3 n_out5p0 = vec3(UV, 0.0);

// Scalar:27
	float n_out27p0 = 0.700000;

// VectorOp:18
	vec3 n_out18p0 = n_out5p0 * vec3(n_out27p0);

// Input:6
	float n_out6p0 = TIME;

// Scalar:10
	float n_out10p0 = 50.000000;

// VectorOp:8
	vec3 n_out8p0 = vec3(n_out6p0) / vec3(n_out10p0);

// VectorOp:9
	vec3 n_out9p0 = n_out18p0 + n_out8p0;

// Texture:3
	vec4 tex_frg_3_read = texture(tex_frg_3, n_out9p0.xy);
	vec3 n_out3p0 = tex_frg_3_read.rgb;
	float n_out3p1 = tex_frg_3_read.a;

// Input:11
	vec3 n_out11p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = n_out11p0 * vec3(n_out27p0);

// Input:12
	float n_out12p0 = TIME;

// Scalar:15
	float n_out15p0 = -50.000000;

// VectorOp:13
	vec3 n_out13p0 = vec3(n_out12p0) / vec3(n_out15p0);

// VectorOp:14
	vec3 n_out14p0 = n_out19p0 + n_out13p0;

// Texture:4
	vec4 tex_frg_4_read = texture(tex_frg_4, n_out14p0.xy);
	vec3 n_out4p0 = tex_frg_4_read.rgb;
	float n_out4p1 = tex_frg_4_read.a;

// VectorOp:17
	vec3 n_out17p0 = n_out3p0 + n_out4p0;

// Texture:20
	vec4 tex_frg_20_read = texture(tex_frg_20, n_out17p0.xy);
	vec3 n_out20p0 = tex_frg_20_read.rgb;
	float n_out20p1 = tex_frg_20_read.a;

// VectorOp:21
	vec3 n_out21p0 = n_out17p0 + n_out20p0;

// VectorOp:22
	vec3 n_out22p0 = n_out21p0 * n_out17p0;

// Scalar:30
	float n_out30p0 = 0.400000;

// VectorOp:29
	vec3 n_out29p0 = n_out22p0 * vec3(n_out30p0);

// Scalar:33
	float n_out33p0 = 0.385000;

// Compare:28
	bool n_out28p0 = dot(n_out20p0, vec3(0.333333, 0.333333, 0.333333))<n_out33p0;

// Scalar:24
	float n_out24p0 = 1.000000;

// VectorOp:23
	vec3 n_out23p0 = vec3(n_out28p0 ? 1.0 : 0.0) * vec3(n_out24p0);

// VectorOp:31
	vec3 n_out31p0 = n_out29p0 + n_out23p0;

// VectorDecompose:36
	float n_out36p0 = n_out31p0.x;
	float n_out36p1 = n_out31p0.y;
	float n_out36p2 = n_out31p0.z;

// Scalar:35
	float n_out35p0 = 1.000000;

// Compare:34
	bool n_out34p0 = n_out36p2<n_out35p0;

// Color:25
	vec3 n_out25p0 = vec3(1.000000, 0.000000, 0.000000);
	float n_out25p1 = 1.000000;

// VectorOp:26
	vec3 n_out26p0 = vec3(n_out34p0 ? 1.0 : 0.0) * n_out25p0;

// Scalar:40
	float n_out40p0 = 0.600000;

// Compare:39
	bool n_out39p0 = n_out36p2<n_out40p0;

// Color:38
	vec3 n_out38p0 = vec3(1.000000, 0.437250, 0.000000);
	float n_out38p1 = 1.000000;

// VectorOp:37
	vec3 n_out37p0 = vec3(n_out39p0 ? 1.0 : 0.0) * n_out38p0;

// VectorOp:41
	vec3 n_out41p0 = n_out26p0 + n_out37p0;

// Scalar:43
	float n_out43p0 = 0.400000;

// Compare:42
	bool n_out42p0 = n_out36p2<n_out43p0;

// Color:44
	vec3 n_out44p0 = vec3(1.000000, 0.859125, 0.000000);
	float n_out44p1 = 1.000000;

// VectorOp:45
	vec3 n_out45p0 = vec3(n_out42p0 ? 1.0 : 0.0) * n_out44p0;

// VectorOp:46
	vec3 n_out46p0 = n_out41p0 + n_out45p0;

// Scalar:48
	float n_out48p0 = 1.000000;

// Compare:47
	bool n_out47p0 = n_out36p2>n_out48p0;

// Color:49
	vec3 n_out49p0 = vec3(1.000000, 1.000000, 1.000000);
	float n_out49p1 = 1.000000;

// VectorOp:50
	vec3 n_out50p0 = vec3(n_out47p0 ? 1.0 : 0.0) * n_out49p0;

// VectorOp:51
	vec3 n_out51p0 = n_out46p0 + n_out50p0;

// Output:0
	COLOR.rgb = n_out51p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 2824.9, -160.344 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 4360, 180 )
nodes/fragment/3/node = SubResource( 18 )
nodes/fragment/3/position = Vector2( 440, 80 )
nodes/fragment/4/node = SubResource( 19 )
nodes/fragment/4/position = Vector2( 440, 420 )
nodes/fragment/5/node = SubResource( 20 )
nodes/fragment/5/position = Vector2( -200, 40 )
nodes/fragment/6/node = SubResource( 21 )
nodes/fragment/6/position = Vector2( -240, 180 )
nodes/fragment/8/node = SubResource( 22 )
nodes/fragment/8/position = Vector2( 20, 200 )
nodes/fragment/9/node = SubResource( 23 )
nodes/fragment/9/position = Vector2( 200, 200 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( -240, 300 )
nodes/fragment/11/node = SubResource( 2 )
nodes/fragment/11/position = Vector2( -240, 400 )
nodes/fragment/12/node = SubResource( 3 )
nodes/fragment/12/position = Vector2( -324, 477 )
nodes/fragment/13/node = SubResource( 4 )
nodes/fragment/13/position = Vector2( -64, 497 )
nodes/fragment/14/node = SubResource( 5 )
nodes/fragment/14/position = Vector2( 160, 480 )
nodes/fragment/15/node = SubResource( 6 )
nodes/fragment/15/position = Vector2( -324, 597 )
nodes/fragment/17/node = SubResource( 7 )
nodes/fragment/17/position = Vector2( 780, 320 )
nodes/fragment/18/node = SubResource( 8 )
nodes/fragment/18/position = Vector2( -20, 60 )
nodes/fragment/19/node = SubResource( 9 )
nodes/fragment/19/position = Vector2( -80, 380 )
nodes/fragment/20/node = SubResource( 10 )
nodes/fragment/20/position = Vector2( 1000, 420 )
nodes/fragment/21/node = SubResource( 11 )
nodes/fragment/21/position = Vector2( 1220, 320 )
nodes/fragment/22/node = SubResource( 12 )
nodes/fragment/22/position = Vector2( 1420, 200 )
nodes/fragment/23/node = SubResource( 13 )
nodes/fragment/23/position = Vector2( 1820, 440 )
nodes/fragment/24/node = SubResource( 14 )
nodes/fragment/24/position = Vector2( 1620, 580 )
nodes/fragment/25/node = SubResource( 15 )
nodes/fragment/25/position = Vector2( 2760, 240 )
nodes/fragment/26/node = SubResource( 16 )
nodes/fragment/26/position = Vector2( 2940, 160 )
nodes/fragment/27/node = SubResource( 17 )
nodes/fragment/27/position = Vector2( -640, 260 )
nodes/fragment/28/node = SubResource( 26 )
nodes/fragment/28/position = Vector2( 1420, 460 )
nodes/fragment/29/node = SubResource( 27 )
nodes/fragment/29/position = Vector2( 1820, 220 )
nodes/fragment/30/node = SubResource( 28 )
nodes/fragment/30/position = Vector2( 1620, 340 )
nodes/fragment/31/node = SubResource( 29 )
nodes/fragment/31/position = Vector2( 2040, 320 )
nodes/fragment/33/node = SubResource( 30 )
nodes/fragment/33/position = Vector2( 1400, 600 )
nodes/fragment/34/node = SubResource( 31 )
nodes/fragment/34/position = Vector2( 2580, 140 )
nodes/fragment/35/node = SubResource( 32 )
nodes/fragment/35/position = Vector2( 2360, 220 )
nodes/fragment/36/node = SubResource( 33 )
nodes/fragment/36/position = Vector2( 2280, 300 )
nodes/fragment/37/node = SubResource( 34 )
nodes/fragment/37/position = Vector2( 2940, 500 )
nodes/fragment/38/node = SubResource( 35 )
nodes/fragment/38/position = Vector2( 2760, 600 )
nodes/fragment/39/node = SubResource( 36 )
nodes/fragment/39/position = Vector2( 2580, 480 )
nodes/fragment/40/node = SubResource( 37 )
nodes/fragment/40/position = Vector2( 2360, 600 )
nodes/fragment/41/node = SubResource( 38 )
nodes/fragment/41/position = Vector2( 3260, 200 )
nodes/fragment/42/node = SubResource( 39 )
nodes/fragment/42/position = Vector2( 2600, 860 )
nodes/fragment/43/node = SubResource( 40 )
nodes/fragment/43/position = Vector2( 2340, 820 )
nodes/fragment/44/node = SubResource( 41 )
nodes/fragment/44/position = Vector2( 2880, 900 )
nodes/fragment/45/node = SubResource( 42 )
nodes/fragment/45/position = Vector2( 3160, 700 )
nodes/fragment/46/node = SubResource( 43 )
nodes/fragment/46/position = Vector2( 3520, 380 )
nodes/fragment/47/node = SubResource( 44 )
nodes/fragment/47/position = Vector2( 2600, 1140 )
nodes/fragment/48/node = SubResource( 45 )
nodes/fragment/48/position = Vector2( 2340, 1280 )
nodes/fragment/49/node = SubResource( 46 )
nodes/fragment/49/position = Vector2( 2920, 1240 )
nodes/fragment/50/node = SubResource( 47 )
nodes/fragment/50/position = Vector2( 3200, 1040 )
nodes/fragment/51/node = SubResource( 48 )
nodes/fragment/51/position = Vector2( 3760, 660 )
nodes/fragment/53/node = SubResource( 49 )
nodes/fragment/53/position = Vector2( 3500, 20 )
nodes/fragment/54/node = SubResource( 50 )
nodes/fragment/54/position = Vector2( 3840, 220 )
nodes/fragment/55/node = SubResource( 51 )
nodes/fragment/55/position = Vector2( 4120, 160 )
nodes/fragment/connections = PoolIntArray( 10, 0, 8, 1, 8, 0, 9, 1, 9, 0, 3, 0, 15, 0, 13, 1, 13, 0, 14, 1, 14, 0, 4, 0, 3, 0, 17, 0, 4, 0, 17, 1, 18, 0, 9, 0, 19, 0, 14, 0, 17, 0, 21, 0, 20, 0, 21, 1, 17, 0, 20, 0, 21, 0, 22, 0, 17, 0, 22, 1, 24, 0, 23, 1, 25, 0, 26, 1, 27, 0, 18, 1, 27, 0, 19, 1, 12, 0, 13, 0, 6, 0, 8, 0, 5, 0, 18, 0, 11, 0, 19, 0, 28, 0, 23, 0, 30, 0, 29, 1, 22, 0, 29, 0, 20, 0, 28, 0, 33, 0, 28, 1, 29, 0, 31, 0, 23, 0, 31, 1, 31, 0, 36, 0, 36, 2, 34, 0, 35, 0, 34, 1, 34, 0, 26, 0, 38, 0, 37, 1, 40, 0, 39, 1, 39, 0, 37, 0, 36, 2, 39, 0, 26, 0, 41, 0, 37, 0, 41, 1, 44, 0, 45, 1, 43, 0, 42, 1, 42, 0, 45, 0, 41, 0, 46, 0, 45, 0, 46, 1, 36, 2, 42, 0, 49, 0, 50, 1, 48, 0, 47, 1, 47, 0, 50, 0, 36, 2, 47, 0, 46, 0, 51, 0, 50, 0, 51, 1, 53, 2, 54, 1, 31, 0, 53, 0, 53, 0, 55, 0, 54, 0, 55, 1, 51, 0, 0, 0 )

[sub_resource type="ShaderMaterial" id=25]
shader = SubResource( 24 )

[node name="Node2D" type="Node2D"]

[node name="TextureRect" type="TextureRect" parent="."]
material = SubResource( 25 )
margin_right = 64.0
margin_bottom = 64.0
rect_scale = Vector2( 11.855, 8.164 )
texture = ExtResource( 2 )
__meta__ = {
"_edit_use_anchors_": false
}
