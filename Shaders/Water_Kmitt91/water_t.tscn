[gd_scene load_steps=11 format=2]

[ext_resource path="res://Shaders/Water_Kmitt91/stone_mat.material" type="Material" id=1]

[sub_resource type="CubeMesh" id=1]

[sub_resource type="SphereMesh" id=2]

[sub_resource type="PlaneMesh" id=3]
size = Vector2( 64, 64 )
subdivide_width = 32
subdivide_depth = 32

[sub_resource type="Shader" id=4]
code = "shader_type spatial;
render_mode blend_mix, specular_phong;

uniform float speed : hint_range(-1,1) = 0.0;

//colors
uniform sampler2D noise1;
uniform sampler2D noise2;
uniform sampler2D normalmap : hint_normal;
uniform vec4 color : hint_color;
uniform vec4 edge_color : hint_color;

//foam
uniform float edge_scale = 0.25;
uniform float near = 0.1;
uniform float far = 100f;

//waves
uniform vec2 wave_strengh = vec2(0.5, 0.25);
uniform vec2 wave_frequency = vec2(12.0, 12.0);
uniform vec2 time_factor = vec2(1.0, 2.0);



float rim(float depth){
	depth = 2f * depth - 1f;
	return near * far / (far + depth * (near - far));
}


float waves(vec2 pos, float time){
	return (wave_strengh.y * sin(pos.y * wave_frequency.y + time * time_factor.y)) + (wave_strengh.x * sin(pos.x * wave_frequency.x + time * time_factor.x));
}


void vertex(){
	VERTEX.y += waves(VERTEX.xy, TIME);
}


void fragment(){
	
	float time = TIME * speed;
	vec3 n1 = texture(noise1, UV + time).rgb;
	vec3 n2 = texture(noise2, UV - time * 0.2).rgb;
	
	vec2 uv_movement = UV * 4f;
	uv_movement += TIME * speed * 4f;
	
	float sum = (n1.r + n2.r) - 1f;
	
	//new displacement
	vec3 n3 = texture(normalmap, UV + time).rgb;
	float dispX = cos(n3.x * 8.+time);
	
	float z_depth = rim(texture(DEPTH_TEXTURE, SCREEN_UV).x);
	float z_pos = rim(FRAGCOORD.z);
	float diff = z_depth - z_pos;
	
	vec2 displacement = vec2(0.f, dispX * 0.05f);
	diff += displacement.x * 50f;
	
	
	vec4 col = mix(edge_color, color, step(edge_scale, diff));
	
	vec4 alpha = vec4(1.0);
	alpha = texture(SCREEN_TEXTURE, SCREEN_UV + displacement);
	
	
	float fin = 0.0;
	if (sum > 0.0 && sum < 0.4) fin = 0.1;
	if (sum > 0.4 && sum < 0.8) fin = 0.0;
	if (sum > 0.8) fin = 1f;
	
	ALBEDO = vec3(fin) + mix(alpha.rgb, col.rgb, color.a);
	
	NORMALMAP = texture(normalmap, uv_movement).rgb;
	ROUGHNESS = 0.1;
	SPECULAR = 1f;
}"

[sub_resource type="OpenSimplexNoise" id=6]
seed = 107
octaves = 9
period = 16.9
persistence = 0.827
lacunarity = 4.0

[sub_resource type="NoiseTexture" id=7]
seamless = true
noise = SubResource( 6 )

[sub_resource type="OpenSimplexNoise" id=10]
octaves = 9
period = 25.8
persistence = 0.649

[sub_resource type="NoiseTexture" id=11]
seamless = true
as_normalmap = true
bump_strength = 4.0
noise = SubResource( 10 )

[sub_resource type="ShaderMaterial" id=5]
shader = SubResource( 4 )
shader_param/speed = 0.001
shader_param/color = Color( 0, 0.529412, 1, 0.494118 )
shader_param/edge_color = Color( 1, 1, 1, 1 )
shader_param/edge_scale = 0.25
shader_param/near = 0.1
shader_param/far = 100.0
shader_param/wave_strengh = Vector2( 0.5, 0.25 )
shader_param/wave_frequency = Vector2( 100, 100 )
shader_param/time_factor = Vector2( 1, 2 )
shader_param/noise1 = SubResource( 7 )
shader_param/normalmap = SubResource( 11 )

[node name="main" type="Spatial"]

[node name="Label" type="Label" parent="."]
modulate = Color( 0, 0, 0, 1 )
margin_right = 429.0
margin_bottom = 14.0
text = "Kmitt91 Youtube: https://www.youtube.com/watch?v=PgcMXPdQrLI"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="MeshInstance" type="MeshInstance" parent="."]
transform = Transform( 0.209741, 0, 0, 0, 1, 0, 0, 0, 4.68269, -3.20054, 4.76837e-07, -2.97859 )
mesh = SubResource( 1 )
material/0 = ExtResource( 1 )

[node name="MeshInstance5" type="MeshInstance" parent="."]
transform = Transform( 3.5735, 0, 0, 0, 0.329217, 0, 0, 0, 4.68269, -0.774236, -1.08066, -2.97859 )
mesh = SubResource( 1 )
material/0 = ExtResource( 1 )

[node name="MeshInstance4" type="MeshInstance" parent="."]
transform = Transform( -0.0396214, 0, -4.59838, 0, 1, 0, 0.205964, 0, -0.884594, -0.148696, -0.0545235, -6.80475 )
mesh = SubResource( 1 )
material/0 = ExtResource( 1 )

[node name="MeshInstance2" type="MeshInstance" parent="."]
transform = Transform( 0.189582, 0.427768, 0, -0.0897203, 0.903889, 0, 0, 0, 5.35612, 2.64736, 0.00730586, -1.91513 )
mesh = SubResource( 1 )
material/0 = ExtResource( 1 )

[node name="MeshInstance3" type="MeshInstance" parent="."]
transform = Transform( 0.346453, 0.781728, -3.31016, -0.0897203, 0.903889, 0, 0.165969, 0.374489, 0.483313, -0.326502, 0, 0.838656 )
mesh = SubResource( 1 )
material/0 = ExtResource( 1 )

[node name="MeshInstance6" type="MeshInstance" parent="."]
transform = Transform( 11.4814, 0, 0, 0, 11.4814, 0, 0, 0, 11.4814, 21.8108, -6.34418, -2.36218 )
mesh = SubResource( 2 )
material/0 = null

[node name="WaterPlane" type="MeshInstance" parent="."]
transform = Transform( 5.84386, 0, 0, 0, 1, 0, 0, 0, 5.84386, -0.255779, -0.0470533, -3.03603 )
mesh = SubResource( 3 )
material/0 = SubResource( 5 )

[node name="DirectionalLight" type="DirectionalLight" parent="."]
transform = Transform( 0.955023, -0.210504, 0.208851, 0.0184143, 0.745055, 0.666749, -0.295959, -0.632915, 0.715421, 10.034, 28.0262, 1.15015 )

[node name="Camera" type="Camera" parent="."]
transform = Transform( 0.0638694, 0.345102, -0.93639, -0.0234842, 0.938565, 0.344302, 0.997682, 0, 0.06805, -24.0521, 11.0675, 0 )
fov = 70.2277
